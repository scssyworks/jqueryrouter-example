<div class="c-demo-3 js-demo-3 js-demos <% if (!path.match(/\/demos\/demo3/)) { %>d-none<% } %>">
    <h2>Persist Data</h2>
    <p>SILK router provides several out of the box ways to persist data.</p>
    <p>Data persistence can be implemented:</p>
    <p>
        <ol>
            <li>using route params</li>
            <li>using query strings</li>
            <li>using history API</li>
        </ol>
    </p>
    <p>We have tested an example with route params in previous demo. In this demo we will explore query strings and history API.</p>
    <p><b>Query Strings:</b></p>
    <p>Like route parameters, query string is a part of URL. SILK router provides ways to use query strings for data persistence:</p>
    <pre>
        <code>
    router.set({
        route: '/demos/demo3',
        queryString: 'q=value&r=othervalue'
    });</code>
    </pre>
    <p>You can also use shorthand approach:</p>
    <pre>
        <code>
    router.set('/demos/demo3?q=value&r=othervalue');</code>
    </pre>
    <p>SILK router parses the query string and converts it to an object before passing it to the route handler.</p>
    <p><i>As of version <b>3.0.2</b> query string values are all returned as string values.</i></p>
    <pre>
        <code>
    route('/demos/demo3', (data) => {
        const { query } = data;
        console.log(query); <span class="comment">// Should print { q: 'value', r: 'othervalue' }</span>
    });</code>
    </pre>
    <p>SILK router uses <a href="https://www.npmjs.com/package/deparam.js">Deparam.js</a> to transform query string to an object.</p>
    <p></p>
    <button class="btn btn-primary js-query">Try it!</button>
    <br />
    <br />
    <p><b>Query string object:</b></p>
    <pre class="js-query-data">No data!</pre>
    <p><b>Using history API:</b></p>
    <p>History API coimes with built-in support for data persistence. SILK router uses this feature out of the box, and also uses a fallback mechanism for cross-browser support.</p>
    <pre>
        <code>
    router.set({
        route: '/demos/demo3',
        data: {
            sample: 'Hello World!'
        }
    });
    
    route('/demos/demo3', (...args) => {
        const [{ data }] = args;
        console.log(data); <span class="comment">// Prints { sample: 'Hello World' }</span>
    });</code>
    </pre>
    Results:
    <pre class="js-storage-data"></pre>
    To check if this data has been persisted, refresh the page.
</div>